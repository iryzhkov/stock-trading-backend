@startuml
class DataSource {
  Data[] sources
  add_source()
}

class Data {
  DataFrame data
  boolean is_primary_source
  boolean is_stock_specific
  __getitem__()
  __len__()
  __contains__()
  get_available_dates()
  get_available_dates_in_range()
  add_data_for_date()
}

class StockData {
  is_primary_source = True
  is_stock_specific = True
}

class RandomizedStockData {
  float error
  String[] affected_fields
  StockData source
}

class RealStockData {
  String[] stock_symbols
}

class GeneratedStockData {
  String evaluation_formula
  String reference_date
  float period
  float minimum_price
  float amplitude
}

class StockDataAnalysis {
  StockData source
  is_primary_source = False
}

class RunningAverageAnalysis {
  int number_of_days
}

class DecisionMaker {
  check_data_source()
  make_decision_for_data()
}

class ReinforcementLearningDecisionMaker {
  generate_possible_actions()
  load_model()
  save_model()
}

class Simulation {
  DataSource data_source
  Data balance
  Data net_worth
  Data stock_ownership
  Data stock_actions

  action_space
  step()
  reset()
  render()
}


DataSource::sources o-- Data
StockDataAnalysis::source o-- StockData
RandomizedStockData::source o-- StockData
Simulation::data_source o-- DataSource
Simulation::balance o-- Data
Simulation::net_worth o-- Data
Simulation::stock_actions o-- Data
Simulation::stock_ownership o-- Data
Simulation::decision_maker o-- DecisionMaker

DecisionMaker <|-- ReinforcementLearningDecisionMaker

Data <|-- DataSource

Data <|-- StockData
StockData <|-- RandomizedStockData
StockData <|-- RealStockData
StockData <|-- GeneratedStockData

Data <|-- StockDataAnalysis
StockDataAnalysis <|-- RunningAverageAnalysis

Data <|-- SimulationData
@enduml
